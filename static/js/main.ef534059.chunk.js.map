{"version":3,"sources":["api/api.js","actions.js","constants.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","components/Header.js","components/MainPage.js","containers/App.js","serviceWorker.js","reducers.js","index.js"],"names":["requestRobots","dispatch","link","type","fetch","then","response","json","data","payload","catch","error","Card","name","email","id","className","alt","src","CardList","robots","map","user","i","key","SearchBox","searchfield","searchChange","console","log","aria-label","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","Component","constructor","super","this","state","hasError","componentDidCatch","info","setState","render","Header","shouldComponentUpdate","nextProps","nextState","MainPage","filterRobots","filter","robot","toLowerCase","includes","searchField","componentDidMount","onRequestRobots","onSearchChange","isPending","App","connect","searchRobots","event","target","value","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","initialStateSearch","initialStateRobots","createLogger","rootReducer","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ef534059.chunk.js","sourcesContent":["export const apiCall = (link) =>\r\nfetch(link).then(response => response.json())","import { apiCall } from './api/api'\r\nimport {\r\n\tCHANGE_SEARCH_FIELD,\r\n\tREQUEST_ROBOTS_PENDING,\r\n\tREQUEST_ROBOTS_SUCCESS,\r\n\tREQUEST_ROBOTS_FAILED\r\n} from './constants.js'\r\n\r\nexport const setSearchField = (text) => ({\r\n\ttype: CHANGE_SEARCH_FIELD,\r\n\tpayload: text\r\n})\r\n\r\nexport const requestRobots = () => (dispatch) => {\r\n\tdispatch({ type: REQUEST_ROBOTS_PENDING });\r\n\tapiCall('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(data => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\r\n\t\t.catch(error => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error }))\r\n}","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD'\r\n\r\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\r\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\r\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';","import React from 'react';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n\treturn (\r\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t\t<img alt='robots' src={`https://robohash.org/${id}?size=200x200`} />\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{\r\n\t\t\t\trobots.map((user, i) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\tid={robots[i].id}\r\n\t\t\t\t\t\t\tname={robots[i].name}\r\n\t\t\t\t\t\t\temail={robots[i].email}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n\tconsole.log('SearchBox')\r\n\treturn (\r\n\t\t<div className='pa2'>\r\n\t\t\t<input\r\n\t\t\taria-label='Search Robots'\r\n\t\t\t\tclassName='pa3 ba b--green bg-lightest-blue'\r\n\t\t\t\ttype='search' \r\n\t\t\t\tplaceholder='search robots' \r\n\t\t\t\tonChange={searchChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t\t<div style={{overflowY: 'scroll', border: '5px solid black', height: '800px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\t\r\n\tcomponentDidCatch(error, info) {\r\n\t\tthis.setState({ hasError: true })\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.hasError) {\r\n\t\t\treturn <h1>Oooops. That is not good</h1>\r\n\t\t}\r\n\t\treturn this.props.children\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n\tshouldComponentUpdate(nextProps, nextState) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h1 className='f1'>RoboFriends</h1>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\nimport Header from '../components/Header'\r\n\r\nimport './MainPage.css';\r\n\r\nclass MainPage extends Component {\r\n\tcomponentDidMount() {\r\n\t\tthis.props.onRequestRobots();\r\n\t}\r\n\r\n\tfilterRobots = () => {\r\n\t\treturn this.props.robots.filter(robot =>{\r\n\t\t\treturn robot.name.toLowerCase().includes(this.props.searchField.toLowerCase());\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {  robots, onSearchChange, isPending } = this.props;\r\n\t\treturn (\r\n\t\t\t<div className='tc'>\r\n\t\t\t\t<Header />\r\n\t\t\t\t<SearchBox searchChange={onSearchChange}/>\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t\t{ isPending ? <h1>Loading</h1> :\r\n\t\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t\t<CardList robots={this.filterRobots()} />\r\n\t\t\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t\t}\r\n\t\t\t\t</Scroll>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default MainPage;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setSearchField, requestRobots } from '../actions';\r\n\r\nimport MainPage from '../components/MainPage';\r\n\r\nimport './App.css';\r\n\r\nconst mapStateToPromps = state => {\r\n\treturn {\r\n\t\tsearchField: state.searchRobots.searchField,\r\n\t\trobots: state.requestRobots.robots,\r\n\t\tisPending: state.requestRobots.isPending,\r\n\t\terror: state.requestRobots.error\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tonSearchChange: (event) => dispatch(setSearchField(event.target.value)),\r\n\t\tonRequestRobots: () => dispatch(requestRobots())\r\n\t}\r\n}\r\n\r\nclass App extends Component {\r\n\trender() {\r\n\t\treturn <MainPage { ...this.props }/>\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToPromps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n\tCHANGE_SEARCH_FIELD,\r\n\tREQUEST_ROBOTS_PENDING,\r\n\tREQUEST_ROBOTS_SUCCESS,\r\n\tREQUEST_ROBOTS_FAILED\r\n} from './constants.js';\r\n\r\nconst initialStateSearch = {\r\n\tsearchField: ''\r\n}\r\n\r\nexport const searchRobots = (state=initialStateSearch, action={}) => {\r\n\tswitch(action.type) {\r\n\t\tcase CHANGE_SEARCH_FIELD:\r\n\t\t\treturn Object.assign({}, state, { searchField: action.payload });\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nconst initialStateRobots = {\r\n\trobots: [],\r\n\tisPending: false\r\n}\r\n\r\nexport const requestRobots = (state=initialStateRobots, action={}) => {\r\n\tswitch(action.type) {\r\n\t\tcase REQUEST_ROBOTS_PENDING:\r\n\t\t\treturn Object.assign({}, state, { isPending: true })\r\n\t\tcase REQUEST_ROBOTS_SUCCESS:\r\n\t\t\treturn Object.assign({}, state, { robots: action.payload, isPending: false })\r\n\t\tcase REQUEST_ROBOTS_FAILED:\r\n\t\t\treturn Object.assign({}, state, { error: action.payload, isPending: false })\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport { searchRobots, requestRobots } from './reducers';\nimport 'tachyons';\n\nconst logger = createLogger();\n\nconst rootReducer = combineReducers({ searchRobots, requestRobots });\n\nconst store = \n\tcreateStore(rootReducer, applyMiddleware(thunkMiddleware));\n\nReactDOM.render(\n\t\t\t\t\t\t\t\t<Provider store ={store}>\n\t\t\t\t\t\t\t\t\t<App />\n\t\t\t\t\t\t\t\t</Provider>, document.getElementById('root'));\nserviceWorker.register();\n"],"sourceRoot":""}